"""Add airline reservation system (booking, flight, passenger, seat, ticket)

Revision ID: ce447f7199cb
Revises: 1595acd4b2ef
Create Date: 2025-06-06 09:05:34.637666

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = 'ce447f7199cb'
down_revision: Union[str, None] = '1595acd4b2ef'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('flight',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('flight_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('flight_date', sa.Date(), nullable=False),
    sa.Column('airline_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('airline_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('departure_airport', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('departure_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('departure_time', sa.DateTime(), nullable=False),
    sa.Column('departure_terminal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('departure_gate', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('arrival_airport', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('arrival_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('arrival_time', sa.DateTime(), nullable=False),
    sa.Column('arrival_terminal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('arrival_gate', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('available_seats', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flight_flight_date'), 'flight', ['flight_date'], unique=False)
    op.create_table('booking',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('booking_reference', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('booking_date', sa.DateTime(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'CANCELLED', 'COMPLETED', name='bookingstatus'), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_booking_booking_reference'), 'booking', ['booking_reference'], unique=True)
    op.create_table('seat',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('seat_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('flight_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['flight_id'], ['flight.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('passenger',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('nationality', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('passport_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('booking_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ticket',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ticket_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('passenger_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('flight_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('seat_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['flight_id'], ['flight.id'], ),
    sa.ForeignKeyConstraint(['passenger_id'], ['passenger.id'], ),
    sa.ForeignKeyConstraint(['seat_id'], ['seat.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticket_number')
    )
    op.drop_index('ix_user_email', table_name='user')
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.create_index('ix_user_email', 'user', ['email'], unique=False)
    op.drop_table('ticket')
    op.drop_table('passenger')
    op.drop_table('seat')
    op.drop_index(op.f('ix_booking_booking_reference'), table_name='booking')
    op.drop_table('booking')
    op.drop_index(op.f('ix_flight_flight_date'), table_name='flight')
    op.drop_table('flight')
    # ### end Alembic commands ###
